diff --git a/node_modules/@ledgerhq/hw-transport-webusb/.DS_Store b/node_modules/@ledgerhq/hw-transport-webusb/.DS_Store
new file mode 100644
index 0000000..a0f42bc
Binary files /dev/null and b/node_modules/@ledgerhq/hw-transport-webusb/.DS_Store differ
diff --git a/node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.d.ts b/node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.d.ts
index d90d860..b8810fa 100644
--- a/node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.d.ts
+++ b/node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.d.ts
@@ -11,7 +11,7 @@ import { getLedgerDevices } from "./webusb";
  * ...
  * TransportWebUSB.create().then(transport => ...)
  */
-export default class TransportWebUSB extends Transport {
+declare class TransportWebUSB extends Transport {
     device: USBDevice;
     deviceModel: DeviceModel | null | undefined;
     channel: number;
@@ -59,4 +59,6 @@ export default class TransportWebUSB extends Transport {
     exchange(apdu: Buffer): Promise<Buffer>;
     setScrambleKey(): void;
 }
+export { TransportWebUSB };
+export default TransportWebUSB;
 //# sourceMappingURL=TransportWebUSB.d.ts.map
diff --git a/node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js b/node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js
index 830d2e2..5d958f1 100644
--- a/node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js
+++ b/node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js
@@ -185,6 +185,7 @@ TransportWebUSB.listen = (observer) => {
         unsubscribe,
     };
 };
+export { TransportWebUSB };
 export default TransportWebUSB;
 function gracefullyResetDevice(device) {
     return __awaiter(this, void 0, void 0, function* () {
diff --git a/node_modules/@ledgerhq/hw-transport-webusb/lib/TransportWebUSB.d.ts b/node_modules/@ledgerhq/hw-transport-webusb/lib/TransportWebUSB.d.ts
index d90d860..b8810fa 100644
--- a/node_modules/@ledgerhq/hw-transport-webusb/lib/TransportWebUSB.d.ts
+++ b/node_modules/@ledgerhq/hw-transport-webusb/lib/TransportWebUSB.d.ts
@@ -11,7 +11,7 @@ import { getLedgerDevices } from "./webusb";
  * ...
  * TransportWebUSB.create().then(transport => ...)
  */
-export default class TransportWebUSB extends Transport {
+declare class TransportWebUSB extends Transport {
     device: USBDevice;
     deviceModel: DeviceModel | null | undefined;
     channel: number;
@@ -59,4 +59,6 @@ export default class TransportWebUSB extends Transport {
     exchange(apdu: Buffer): Promise<Buffer>;
     setScrambleKey(): void;
 }
+export { TransportWebUSB };
+export default TransportWebUSB;
 //# sourceMappingURL=TransportWebUSB.d.ts.map
diff --git a/node_modules/@ledgerhq/hw-transport-webusb/lib/TransportWebUSB.js b/node_modules/@ledgerhq/hw-transport-webusb/lib/TransportWebUSB.js
index b821c0b..acaee43 100644
--- a/node_modules/@ledgerhq/hw-transport-webusb/lib/TransportWebUSB.js
+++ b/node_modules/@ledgerhq/hw-transport-webusb/lib/TransportWebUSB.js
@@ -190,6 +190,7 @@ TransportWebUSB.listen = (observer) => {
         unsubscribe,
     };
 };
+exports.TransportWebUSB = TransportWebUSB;
 exports.default = TransportWebUSB;
 function gracefullyResetDevice(device) {
     return __awaiter(this, void 0, void 0, function* () {
diff --git a/node_modules/@ledgerhq/hw-transport-webusb/src/TransportWebUSB.ts b/node_modules/@ledgerhq/hw-transport-webusb/src/TransportWebUSB.ts
index f215b88..887c0dd 100644
--- a/node_modules/@ledgerhq/hw-transport-webusb/src/TransportWebUSB.ts
+++ b/node_modules/@ledgerhq/hw-transport-webusb/src/TransportWebUSB.ts
@@ -23,7 +23,7 @@ const endpointNumber = 3;
  * ...
  * TransportWebUSB.create().then(transport => ...)
  */
-export default class TransportWebUSB extends Transport {
+class TransportWebUSB extends Transport {
   device: USBDevice;
   deviceModel: DeviceModel | null | undefined;
   channel = Math.floor(Math.random() * 0xffff);
@@ -211,7 +211,8 @@ export default class TransportWebUSB extends Transport {
 
   setScrambleKey() {}
 }
-
+export { TransportWebUSB };
+export default TransportWebUSB;
 async function gracefullyResetDevice(device: USBDevice) {
   try {
     await device.reset();
