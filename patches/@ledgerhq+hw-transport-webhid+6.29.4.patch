diff --git a/node_modules/@ledgerhq/hw-transport-webhid/.DS_Store b/node_modules/@ledgerhq/hw-transport-webhid/.DS_Store
new file mode 100644
index 0000000..5ebd040
Binary files /dev/null and b/node_modules/@ledgerhq/hw-transport-webhid/.DS_Store differ
diff --git a/node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.d.ts b/node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.d.ts
index fcaad75..f552bf7 100644
--- a/node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.d.ts
+++ b/node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.d.ts
@@ -11,7 +11,7 @@ declare function getLedgerDevices(): Promise<HIDDevice[]>;
  * ...
  * TransportWebHID.create().then(transport => ...)
  */
-export default class TransportWebHID extends Transport {
+declare class TransportWebHID extends Transport {
     device: HIDDevice;
     deviceModel: DeviceModel | null | undefined;
     channel: number;
@@ -62,5 +62,6 @@ export default class TransportWebHID extends Transport {
     exchange: (apdu: Buffer) => Promise<Buffer>;
     setScrambleKey(): void;
 }
-export {};
+export { TransportWebHID };
+export default TransportWebHID;
 //# sourceMappingURL=TransportWebHID.d.ts.map
diff --git a/node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js b/node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js
index 8246e08..3310fd1 100644
--- a/node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js
+++ b/node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js
@@ -216,5 +216,6 @@ TransportWebHID.listen = (observer) => {
         unsubscribe,
     };
 };
+export { TransportWebHID };
 export default TransportWebHID;
 //# sourceMappingURL=TransportWebHID.js.map
diff --git a/node_modules/@ledgerhq/hw-transport-webhid/lib/TransportWebHID.d.ts b/node_modules/@ledgerhq/hw-transport-webhid/lib/TransportWebHID.d.ts
index fcaad75..f552bf7 100644
--- a/node_modules/@ledgerhq/hw-transport-webhid/lib/TransportWebHID.d.ts
+++ b/node_modules/@ledgerhq/hw-transport-webhid/lib/TransportWebHID.d.ts
@@ -11,7 +11,7 @@ declare function getLedgerDevices(): Promise<HIDDevice[]>;
  * ...
  * TransportWebHID.create().then(transport => ...)
  */
-export default class TransportWebHID extends Transport {
+declare class TransportWebHID extends Transport {
     device: HIDDevice;
     deviceModel: DeviceModel | null | undefined;
     channel: number;
@@ -62,5 +62,6 @@ export default class TransportWebHID extends Transport {
     exchange: (apdu: Buffer) => Promise<Buffer>;
     setScrambleKey(): void;
 }
-export {};
+export { TransportWebHID };
+export default TransportWebHID;
 //# sourceMappingURL=TransportWebHID.d.ts.map
diff --git a/node_modules/@ledgerhq/hw-transport-webhid/lib/TransportWebHID.js b/node_modules/@ledgerhq/hw-transport-webhid/lib/TransportWebHID.js
index 0d1228c..d3c3f3e 100644
--- a/node_modules/@ledgerhq/hw-transport-webhid/lib/TransportWebHID.js
+++ b/node_modules/@ledgerhq/hw-transport-webhid/lib/TransportWebHID.js
@@ -221,5 +221,6 @@ TransportWebHID.listen = (observer) => {
         unsubscribe,
     };
 };
+exports.TransportWebHID = TransportWebHID;
 exports.default = TransportWebHID;
 //# sourceMappingURL=TransportWebHID.js.map
diff --git a/node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts b/node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts
index 0ddb4eb..6052cd4 100644
--- a/node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts
+++ b/node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts
@@ -53,7 +53,7 @@ async function getFirstLedgerDevice(): Promise<HIDDevice> {
  * TransportWebHID.create().then(transport => ...)
  */
 
-export default class TransportWebHID extends Transport {
+class TransportWebHID extends Transport {
   device: HIDDevice;
   deviceModel: DeviceModel | null | undefined;
   channel = Math.floor(Math.random() * 0xffff);
@@ -232,3 +232,5 @@ export default class TransportWebHID extends Transport {
 
   setScrambleKey() {}
 }
+export { TransportWebHID };
+export default TransportWebHID;
